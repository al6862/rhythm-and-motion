/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Video = {
  _id: string;
  _type: "video";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  video?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    _type: "file";
  };
  hasBorder?: boolean;
  borderColor?: Color;
};

export type Teachers = {
  _id: string;
  _type: "teachers";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  bgColor?: Color;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  teachers?: Array<
    {
      _key: string;
    } & Teacher
  >;
};

export type SplitImageAndText = {
  _id: string;
  _type: "splitImageAndText";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  layout?: "left" | "right";
  bgColor?: Color;
  textColor?: Color;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  header?: string;
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | ({
        _key: string;
      } & Link)
  >;
};

export type Partners = {
  _id: string;
  _type: "partners";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  bgColor?: Color;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  studios?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "danceStudio";
  }>;
  link?: Link;
};

export type PhotoGallery = {
  _id: string;
  _type: "photoGallery";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  bgColor?: Color;
  photos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "photo";
    _key: string;
  }>;
};

export type Hero = {
  _id: string;
  _type: "hero";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  featuredImages?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
    _key: string;
  }>;
  secondaryImages?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
    _key: string;
  }>;
};

export type ImageText = {
  _id: string;
  _type: "imageText";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: string;
  bgColor?: Color;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | ({
        _key: string;
      } & Link)
  >;
};

export type ClassesSlideshow = {
  _id: string;
  _type: "classesSlideshow";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  classes?: Array<{
    className?: string;
    bgColor?: Color;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      caption?: string;
      _type: "imageAlt";
    };
    video?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
      };
      _type: "file";
    };
    content?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | ({
          _key: string;
        } & Link)
    >;
    _key: string;
  }>;
  link?: Link;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type CenteredText = {
  _id: string;
  _type: "centeredText";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  marginY?: number;
  bgColor?: Color;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | ({
        _key: string;
      } & Link)
  >;
  textColor?: Color;
};

export type Teacher = {
  _type: "teacher";
  name?: string;
  slug?: Slug;
  pronouns?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  blurb?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | ({
        _key: string;
      } & Link)
  >;
  studio?: Link;
};

export type LinkList = {
  _type: "linkList";
  title?: string;
  links?: Array<
    {
      _key: string;
    } & Link
  >;
};

export type DanceStudio = {
  _id: string;
  _type: "danceStudio";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  header?: {
    studioTitle?: string;
    studioSubTitle?: string;
  };
  slug?: Slug;
  studioAddress?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  location?: string;
  studioDescription?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | ({
        _key: string;
      } & Link)
  >;
  bgColor?: Color;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    caption?: string;
    _type: "imageAlt";
  };
  danceClasses?: Array<
    {
      _key: string;
    } & DanceClass
  >;
  partnerSite?: Link;
  partnerLink?: Link;
};

export type ImageAlt = {
  _type: "imageAlt";
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  caption?: string;
};

export type DanceClass = {
  _type: "danceClass";
  classType?: Link;
  instructor?: Link;
  mode?: "Livestream" | "In-person" | "Livestream & In-person";
  dayOfWeek?: number;
  startTime?: string;
};

export type SiteSettings = {
  _id: string;
  _type: "siteSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  SEO?: Seo;
};

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  linkLists?: Array<
    {
      _key: string;
    } & LinkList
  >;
  newsletterContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "caption";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  footerContent?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "caption";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type Header = {
  _id: string;
  _type: "header";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  navList?: Array<
    {
      _key: string;
    } & Link
  >;
  mobileNavList?: Array<
    {
      _key: string;
    } & Link
  >;
};

export type Color = {
  _type: "color";
  hex?: string;
  alpha?: number;
  hsl?: HslaColor;
  hsv?: HsvaColor;
  rgb?: RgbaColor;
};

export type RgbaColor = {
  _type: "rgbaColor";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type HsvaColor = {
  _type: "hsvaColor";
  h?: number;
  s?: number;
  v?: number;
  a?: number;
};

export type HslaColor = {
  _type: "hslaColor";
  h?: number;
  s?: number;
  l?: number;
  a?: number;
};

export type Link = {
  _type: "link";
  text?: string;
  type?: string;
  internalLink?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "homepage";
      };
  url?: string;
  email?: string;
  phone?: string;
  value?: string;
  blank?: boolean;
  parameters?: string;
  anchor?: string;
};

export type Homepage = {
  _id: string;
  _type: "homepage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  content?: Array<
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "hero";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "centeredText";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "classesSlideshow";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "imageText";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "partners";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "photoGallery";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "splitImageAndText";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "teachers";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "video";
      }
  >;
  SEO?: Seo;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  content?: Array<
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "hero";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "centeredText";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "classesSlideshow";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "imageText";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "partners";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "photoGallery";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "splitImageAndText";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "teachers";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "video";
      }
  >;
  SEO?: Seo;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Seo = {
  _type: "seo";
  metaTitle?: string;
  metaDescription?: string;
  openGraphTitle?: string;
  openGraphDescription?: string;
  openGraphImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  includeInSitemap?: boolean;
  disallowRobots?: boolean;
  initSeo?: boolean;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | Video
  | Teachers
  | SplitImageAndText
  | Partners
  | PhotoGallery
  | Hero
  | ImageText
  | ClassesSlideshow
  | SanityFileAsset
  | CenteredText
  | Teacher
  | LinkList
  | DanceStudio
  | ImageAlt
  | DanceClass
  | SiteSettings
  | Footer
  | Header
  | Color
  | RgbaColor
  | HsvaColor
  | HslaColor
  | Link
  | Homepage
  | Page
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Seo
  | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: photoGalleryData
// Query: {    _id,    _type,    'bgColor': bgColor.hex,    photos[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,}}
export type PhotoGalleryDataResult = {
  _id: never;
  _type: never;
  bgColor: never;
  photos: never;
};
// Variable: partnersQuery
// Query: {    'partners': *[_type == 'partners'][0] {    _id,    _type,    title,    header,    'bgColor': bgColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    studios[] -> {    _id,    header {        studioTitle,        studioSubTitle,    },    studioAddress,    location,    slug,    studioDescription[] {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    'bgColor': bgColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    danceClasses[] {    _id,    _type,    classType {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    instructor {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    mode,    dayOfWeek,    startTime,},    partnerSite {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    partnerLink {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    }},    link {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    }},    }
export type PartnersQueryResult = {
  partners: {
    _id: string;
    _type: "partners";
    title: string | null;
    header: string | null;
    bgColor: string | null;
    image: {
      caption: string | null;
      assetId: string | null;
      assetPath: string | null;
      aspectRatio: number | null;
    } | null;
    studios: Array<{
      _id: string;
      header: {
        studioTitle: string | null;
        studioSubTitle: string | null;
      } | null;
      studioAddress: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      location: string | null;
      slug: Slug | null;
      studioDescription: Array<
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h1" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            _key: string;
            _type: "link";
            text?: string;
            type?: string;
            internalLink:
              | {
                  _type: "homepage";
                  slug: null;
                  title: null;
                }
              | {
                  _type: "page";
                  slug: Slug | null;
                  title: string | null;
                }
              | null;
            url?: string;
            email?: string;
            phone?: string;
            value?: string;
            blank?: boolean;
            parameters?: string;
            anchor?: string;
          }
      > | null;
      bgColor: string | null;
      image: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      danceClasses: Array<{
        _id: null;
        _type: "danceClass";
        classType: {
          _type: "link";
          text?: string;
          type?: string;
          internalLink:
            | {
                _type: "homepage";
                slug: null;
                title: null;
              }
            | {
                _type: "page";
                slug: Slug | null;
                title: string | null;
              }
            | null;
          url?: string;
          email?: string;
          phone?: string;
          value?: string;
          blank?: boolean;
          parameters?: string;
          anchor?: string;
        } | null;
        instructor: {
          _type: "link";
          text?: string;
          type?: string;
          internalLink:
            | {
                _type: "homepage";
                slug: null;
                title: null;
              }
            | {
                _type: "page";
                slug: Slug | null;
                title: string | null;
              }
            | null;
          url?: string;
          email?: string;
          phone?: string;
          value?: string;
          blank?: boolean;
          parameters?: string;
          anchor?: string;
        } | null;
        mode: "In-person" | "Livestream & In-person" | "Livestream" | null;
        dayOfWeek: number | null;
        startTime: string | null;
      }> | null;
      partnerSite: {
        _type: "link";
        text?: string;
        type?: string;
        internalLink:
          | {
              _type: "homepage";
              slug: null;
              title: null;
            }
          | {
              _type: "page";
              slug: Slug | null;
              title: string | null;
            }
          | null;
        url?: string;
        email?: string;
        phone?: string;
        value?: string;
        blank?: boolean;
        parameters?: string;
        anchor?: string;
      } | null;
      partnerLink: {
        _type: "link";
        text?: string;
        type?: string;
        internalLink:
          | {
              _type: "homepage";
              slug: null;
              title: null;
            }
          | {
              _type: "page";
              slug: Slug | null;
              title: string | null;
            }
          | null;
        url?: string;
        email?: string;
        phone?: string;
        value?: string;
        blank?: boolean;
        parameters?: string;
        anchor?: string;
      } | null;
    }> | null;
    link: {
      _type: "link";
      text?: string;
      type?: string;
      internalLink:
        | {
            _type: "homepage";
            slug: null;
            title: null;
          }
        | {
            _type: "page";
            slug: Slug | null;
            title: string | null;
          }
        | null;
      url?: string;
      email?: string;
      phone?: string;
      value?: string;
      blank?: boolean;
      parameters?: string;
      anchor?: string;
    } | null;
  } | null;
};
// Variable: teachersQuery
// Query: {    'teachers': *[_type == 'teachers'][0] {    _id,    _type,    title,    header,    'bgColor': bgColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    "teachers": teachers[] | order(name asc) {    ...,    name,    slug,    pronouns,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    blurb,    studio {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }    },},}
export type TeachersQueryResult = {
  teachers: {
    _id: string;
    _type: "teachers";
    title: string | null;
    header: string | null;
    bgColor: string | null;
    image: {
      caption: string | null;
      assetId: string | null;
      assetPath: string | null;
      aspectRatio: number | null;
    } | null;
    teachers: Array<{
      _key: string;
      _type: "teacher";
      name: string | null;
      slug: Slug | null;
      pronouns: string | null;
      image: {
        caption: string | null;
        assetId: string | null;
        assetPath: string | null;
        aspectRatio: number | null;
      } | null;
      blurb: Array<
        | ({
            _key: string;
          } & Link)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "h1" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
      > | null;
      studio: {
        _type: "link";
        text?: string;
        type?: string;
        internalLink:
          | {
              _type: "homepage";
              slug: null;
              title: null;
            }
          | {
              _type: "page";
              slug: Slug | null;
              title: string | null;
            }
          | null;
        url?: string;
        email?: string;
        phone?: string;
        value?: string;
        blank?: boolean;
        parameters?: string;
        anchor?: string;
      } | null;
    }> | null;
  } | null;
};
// Variable: siteSettingsQuery
// Query: *[_type == 'siteSettings'][0] {        SEO {    ...,    'openGraphImage': openGraphImage.asset->url,},    }
export type SiteSettingsQueryResult = {
  SEO: {
    _type: "seo";
    metaTitle?: string;
    metaDescription?: string;
    openGraphTitle?: string;
    openGraphDescription?: string;
    openGraphImage: string | null;
    includeInSitemap?: boolean;
    disallowRobots?: boolean;
    initSeo?: boolean;
  } | null;
} | null;
// Variable: headerQuery
// Query: {    'header': *[_type == 'header'][0] {        navList[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },        },        mobileNavList[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },        }    }}
export type HeaderQueryResult = {
  header: {
    navList: Array<{
      _key: string;
      _type: "link";
      text?: string;
      type?: string;
      internalLink:
        | {
            _type: "homepage";
            slug: null;
            title: null;
          }
        | {
            _type: "page";
            slug: Slug | null;
            title: string | null;
          }
        | null;
      url?: string;
      email?: string;
      phone?: string;
      value?: string;
      blank?: boolean;
      parameters?: string;
      anchor?: string;
    }> | null;
    mobileNavList: Array<{
      _key: string;
      _type: "link";
      text?: string;
      type?: string;
      internalLink:
        | {
            _type: "homepage";
            slug: null;
            title: null;
          }
        | {
            _type: "page";
            slug: Slug | null;
            title: string | null;
          }
        | null;
      url?: string;
      email?: string;
      phone?: string;
      value?: string;
      blank?: boolean;
      parameters?: string;
      anchor?: string;
    }> | null;
  } | null;
};
// Variable: footerQuery
// Query: {    'footer': *[_type == 'footer'][0] {        linkLists[] {            links [] {                ...,                  _type == "link" => {    ...,    internalLink->{_type,slug,title}  },            },        },           newsletterContent[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },        },        footerContent[] {            ...,              _type == "link" => {    ...,    internalLink->{_type,slug,title}  },        },    }}
export type FooterQueryResult = {
  footer: {
    linkLists: Array<{
      links: Array<{
        _key: string;
        _type: "link";
        text?: string;
        type?: string;
        internalLink:
          | {
              _type: "homepage";
              slug: null;
              title: null;
            }
          | {
              _type: "page";
              slug: Slug | null;
              title: string | null;
            }
          | null;
        url?: string;
        email?: string;
        phone?: string;
        value?: string;
        blank?: boolean;
        parameters?: string;
        anchor?: string;
      }> | null;
    }> | null;
    newsletterContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "caption" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    footerContent: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "caption" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
  } | null;
};
// Variable: homepageQuery
// Query: {    'homepage': *[_type == 'homepage'][0] {        ...,        content[]->{    ...,    _type == 'centeredText' => {    _id,    _type,    marginY,    'bgColor': bgColor.hex,    'textColor': textColor.hex,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    content[] {      ...,        _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },},    _type == 'classesSlideshow' => {    _id,    classes[] {    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    'bgColor': bgColor.hex,    'video': video.asset->url,    },      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    _type == 'imageText' => {    _id,    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    'bgColor': bgColor.hex,    content[] {      ...,        _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },},    _type == 'hero' => {    _id,    title,    header,    content,    featuredImages[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    secondaryImages[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},},    _type == 'partners' => {    _id,    _type,    title,    header,    'bgColor': bgColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    studios[] -> {    _id,    header {        studioTitle,        studioSubTitle,    },    studioAddress,    location,    slug,    studioDescription[] {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    'bgColor': bgColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    danceClasses[] {    _id,    _type,    classType {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    instructor {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    mode,    dayOfWeek,    startTime,},    partnerSite {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    partnerLink {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    }},    link {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    }},    _type == 'photoGallery' => {    _id,    _type,    'bgColor': bgColor.hex,    photos[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,}},    _type == 'splitImageAndText' => {    _id,    layout,    'bgColor': bgColor.hex,        'textColor': textColor.hex,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    header,    content[] {      ...,        _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },},    _type == 'teachers' => {    _id,    _type,    title,    header,    'bgColor': bgColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    "teachers": teachers[] | order(name asc) {    ...,    name,    slug,    pronouns,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    blurb,    studio {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }    },},    _type == 'video' => {    _id,    'video': video.asset->url,    hasBorder,    'borderColor': borderColor.hex,},},        SEO {    ...,    'openGraphImage': openGraphImage.asset->url,},    }}
export type HomepageQueryResult = {
  homepage: {
    _id: string;
    _type: "homepage";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    content: Array<
      | {
          _id: string;
          _type: "centeredText";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          marginY: number | null;
          bgColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h1" | "h2" | "h3" | "h4" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  href?: string;
                  _type: "link";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              }
          > | null;
          textColor: string | null;
        }
      | {
          _id: string;
          _type: "classesSlideshow";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          classes: Array<{
            className?: string;
            bgColor: string | null;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            video: string | null;
            content?: Array<
              | ({
                  _key: string;
                } & Link)
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "h1" | "h2" | "h3" | "h4" | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
            >;
            _key: string;
          }> | null;
          link?: Link;
        }
      | {
          _id: string;
          _type: "hero";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          content: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          featuredImages: Array<{
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          }> | null;
          secondaryImages: Array<{
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "imageText";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header?: string;
          bgColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h1" | "h2" | "h3" | "h4" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  href?: string;
                  _type: "link";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              }
          > | null;
        }
      | {
          _id: string;
          _type: "partners";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          bgColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          studios: Array<{
            _id: string;
            header: {
              studioTitle: string | null;
              studioSubTitle: string | null;
            } | null;
            studioAddress: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            location: string | null;
            slug: Slug | null;
            studioDescription: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "h1" | "h2" | "h3" | "h4" | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "link";
                  text?: string;
                  type?: string;
                  internalLink:
                    | {
                        _type: "homepage";
                        slug: null;
                        title: null;
                      }
                    | {
                        _type: "page";
                        slug: Slug | null;
                        title: string | null;
                      }
                    | null;
                  url?: string;
                  email?: string;
                  phone?: string;
                  value?: string;
                  blank?: boolean;
                  parameters?: string;
                  anchor?: string;
                }
            > | null;
            bgColor: string | null;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            danceClasses: Array<{
              _id: null;
              _type: "danceClass";
              classType: {
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              } | null;
              instructor: {
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              } | null;
              mode:
                | "In-person"
                | "Livestream & In-person"
                | "Livestream"
                | null;
              dayOfWeek: number | null;
              startTime: string | null;
            }> | null;
            partnerSite: {
              _type: "link";
              text?: string;
              type?: string;
              internalLink:
                | {
                    _type: "homepage";
                    slug: null;
                    title: null;
                  }
                | {
                    _type: "page";
                    slug: Slug | null;
                    title: string | null;
                  }
                | null;
              url?: string;
              email?: string;
              phone?: string;
              value?: string;
              blank?: boolean;
              parameters?: string;
              anchor?: string;
            } | null;
            partnerLink: {
              _type: "link";
              text?: string;
              type?: string;
              internalLink:
                | {
                    _type: "homepage";
                    slug: null;
                    title: null;
                  }
                | {
                    _type: "page";
                    slug: Slug | null;
                    title: string | null;
                  }
                | null;
              url?: string;
              email?: string;
              phone?: string;
              value?: string;
              blank?: boolean;
              parameters?: string;
              anchor?: string;
            } | null;
          }> | null;
          link: {
            _type: "link";
            text?: string;
            type?: string;
            internalLink:
              | {
                  _type: "homepage";
                  slug: null;
                  title: null;
                }
              | {
                  _type: "page";
                  slug: Slug | null;
                  title: string | null;
                }
              | null;
            url?: string;
            email?: string;
            phone?: string;
            value?: string;
            blank?: boolean;
            parameters?: string;
            anchor?: string;
          } | null;
        }
      | {
          _id: string;
          _type: "photoGallery";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          bgColor: string | null;
          photos: Array<{
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "splitImageAndText";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          layout: "left" | "right" | null;
          bgColor: string | null;
          textColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          header: string | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h1" | "h2" | "h3" | "h4" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  href?: string;
                  _type: "link";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              }
          > | null;
        }
      | {
          _id: string;
          _type: "teachers";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          bgColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          teachers: Array<{
            _key: string;
            _type: "teacher";
            name: string | null;
            slug: Slug | null;
            pronouns: string | null;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            blurb: Array<
              | ({
                  _key: string;
                } & Link)
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "h1" | "h2" | "h3" | "h4" | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
            > | null;
            studio: {
              _type: "link";
              text?: string;
              type?: string;
              internalLink:
                | {
                    _type: "homepage";
                    slug: null;
                    title: null;
                  }
                | {
                    _type: "page";
                    slug: Slug | null;
                    title: string | null;
                  }
                | null;
              url?: string;
              email?: string;
              phone?: string;
              value?: string;
              blank?: boolean;
              parameters?: string;
              anchor?: string;
            } | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "video";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          video: string | null;
          hasBorder: boolean | null;
          borderColor: string | null;
        }
    > | null;
    SEO: {
      _type: "seo";
      metaTitle?: string;
      metaDescription?: string;
      openGraphTitle?: string;
      openGraphDescription?: string;
      openGraphImage: string | null;
      includeInSitemap?: boolean;
      disallowRobots?: boolean;
      initSeo?: boolean;
    } | null;
  } | null;
};
// Variable: pageQuery
// Query: {    'page': *[_type == 'page' && $slug == slug.current][0] {        ...,        title,        content[]->{    ...,    _type == 'centeredText' => {    _id,    _type,    marginY,    'bgColor': bgColor.hex,    'textColor': textColor.hex,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    content[] {      ...,        _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },},    _type == 'classesSlideshow' => {    _id,    classes[] {    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    'bgColor': bgColor.hex,    'video': video.asset->url,    },      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }},    _type == 'imageText' => {    _id,    ...,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    'bgColor': bgColor.hex,    content[] {      ...,        _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },},    _type == 'hero' => {    _id,    title,    header,    content,    featuredImages[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    secondaryImages[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},},    _type == 'partners' => {    _id,    _type,    title,    header,    'bgColor': bgColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    studios[] -> {    _id,    header {        studioTitle,        studioSubTitle,    },    studioAddress,    location,    slug,    studioDescription[] {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    'bgColor': bgColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    danceClasses[] {    _id,    _type,    classType {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    instructor {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    mode,    dayOfWeek,    startTime,},    partnerSite {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },    partnerLink {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    }},    link {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    }},    _type == 'photoGallery' => {    _id,    _type,    'bgColor': bgColor.hex,    photos[] {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,}},    _type == 'splitImageAndText' => {    _id,    layout,    'bgColor': bgColor.hex,        'textColor': textColor.hex,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    header,    content[] {      ...,        _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },},    _type == 'teachers' => {    _id,    _type,    title,    header,    'bgColor': bgColor.hex,        image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    "teachers": teachers[] | order(name asc) {    ...,    name,    slug,    pronouns,    image {    caption,    'assetId': asset->_id,    'assetPath': asset->path,    'aspectRatio': asset->metadata.dimensions.aspectRatio,},    blurb,    studio {        ...,          _type == "link" => {    ...,    internalLink->{_type,slug,title}  },    },      _type == "link" => {    ...,    internalLink->{_type,slug,title}  }    },},    _type == 'video' => {    _id,    'video': video.asset->url,    hasBorder,    'borderColor': borderColor.hex,},},        SEO {    ...,    'openGraphImage': openGraphImage.asset->url,},    }}
export type PageQueryResult = {
  page: {
    _id: string;
    _type: "page";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    title: string | null;
    slug?: Slug;
    content: Array<
      | {
          _id: string;
          _type: "centeredText";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          marginY: number | null;
          bgColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h1" | "h2" | "h3" | "h4" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  href?: string;
                  _type: "link";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              }
          > | null;
          textColor: string | null;
        }
      | {
          _id: string;
          _type: "classesSlideshow";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          classes: Array<{
            className?: string;
            bgColor: string | null;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            video: string | null;
            content?: Array<
              | ({
                  _key: string;
                } & Link)
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "h1" | "h2" | "h3" | "h4" | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
            >;
            _key: string;
          }> | null;
          link?: Link;
        }
      | {
          _id: string;
          _type: "hero";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          content: Array<{
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }> | null;
          featuredImages: Array<{
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          }> | null;
          secondaryImages: Array<{
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "imageText";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          header?: string;
          bgColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h1" | "h2" | "h3" | "h4" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  href?: string;
                  _type: "link";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              }
          > | null;
        }
      | {
          _id: string;
          _type: "partners";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          bgColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          studios: Array<{
            _id: string;
            header: {
              studioTitle: string | null;
              studioSubTitle: string | null;
            } | null;
            studioAddress: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
            location: string | null;
            slug: Slug | null;
            studioDescription: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "h1" | "h2" | "h3" | "h4" | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
              | {
                  _key: string;
                  _type: "link";
                  text?: string;
                  type?: string;
                  internalLink:
                    | {
                        _type: "homepage";
                        slug: null;
                        title: null;
                      }
                    | {
                        _type: "page";
                        slug: Slug | null;
                        title: string | null;
                      }
                    | null;
                  url?: string;
                  email?: string;
                  phone?: string;
                  value?: string;
                  blank?: boolean;
                  parameters?: string;
                  anchor?: string;
                }
            > | null;
            bgColor: string | null;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            danceClasses: Array<{
              _id: null;
              _type: "danceClass";
              classType: {
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              } | null;
              instructor: {
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              } | null;
              mode:
                | "In-person"
                | "Livestream & In-person"
                | "Livestream"
                | null;
              dayOfWeek: number | null;
              startTime: string | null;
            }> | null;
            partnerSite: {
              _type: "link";
              text?: string;
              type?: string;
              internalLink:
                | {
                    _type: "homepage";
                    slug: null;
                    title: null;
                  }
                | {
                    _type: "page";
                    slug: Slug | null;
                    title: string | null;
                  }
                | null;
              url?: string;
              email?: string;
              phone?: string;
              value?: string;
              blank?: boolean;
              parameters?: string;
              anchor?: string;
            } | null;
            partnerLink: {
              _type: "link";
              text?: string;
              type?: string;
              internalLink:
                | {
                    _type: "homepage";
                    slug: null;
                    title: null;
                  }
                | {
                    _type: "page";
                    slug: Slug | null;
                    title: string | null;
                  }
                | null;
              url?: string;
              email?: string;
              phone?: string;
              value?: string;
              blank?: boolean;
              parameters?: string;
              anchor?: string;
            } | null;
          }> | null;
          link: {
            _type: "link";
            text?: string;
            type?: string;
            internalLink:
              | {
                  _type: "homepage";
                  slug: null;
                  title: null;
                }
              | {
                  _type: "page";
                  slug: Slug | null;
                  title: string | null;
                }
              | null;
            url?: string;
            email?: string;
            phone?: string;
            value?: string;
            blank?: boolean;
            parameters?: string;
            anchor?: string;
          } | null;
        }
      | {
          _id: string;
          _type: "photoGallery";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          bgColor: string | null;
          photos: Array<{
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "splitImageAndText";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          layout: "left" | "right" | null;
          bgColor: string | null;
          textColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          header: string | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "h1" | "h2" | "h3" | "h4" | "normal";
                listItem?: "bullet" | "number";
                markDefs?: Array<{
                  href?: string;
                  _type: "link";
                  _key: string;
                }>;
                level?: number;
                _type: "block";
                _key: string;
              }
            | {
                _key: string;
                _type: "link";
                text?: string;
                type?: string;
                internalLink:
                  | {
                      _type: "homepage";
                      slug: null;
                      title: null;
                    }
                  | {
                      _type: "page";
                      slug: Slug | null;
                      title: string | null;
                    }
                  | null;
                url?: string;
                email?: string;
                phone?: string;
                value?: string;
                blank?: boolean;
                parameters?: string;
                anchor?: string;
              }
          > | null;
        }
      | {
          _id: string;
          _type: "teachers";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title: string | null;
          header: string | null;
          bgColor: string | null;
          image: {
            caption: string | null;
            assetId: string | null;
            assetPath: string | null;
            aspectRatio: number | null;
          } | null;
          teachers: Array<{
            _key: string;
            _type: "teacher";
            name: string | null;
            slug: Slug | null;
            pronouns: string | null;
            image: {
              caption: string | null;
              assetId: string | null;
              assetPath: string | null;
              aspectRatio: number | null;
            } | null;
            blurb: Array<
              | ({
                  _key: string;
                } & Link)
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "h1" | "h2" | "h3" | "h4" | "normal";
                  listItem?: "bullet" | "number";
                  markDefs?: Array<{
                    href?: string;
                    _type: "link";
                    _key: string;
                  }>;
                  level?: number;
                  _type: "block";
                  _key: string;
                }
            > | null;
            studio: {
              _type: "link";
              text?: string;
              type?: string;
              internalLink:
                | {
                    _type: "homepage";
                    slug: null;
                    title: null;
                  }
                | {
                    _type: "page";
                    slug: Slug | null;
                    title: string | null;
                  }
                | null;
              url?: string;
              email?: string;
              phone?: string;
              value?: string;
              blank?: boolean;
              parameters?: string;
              anchor?: string;
            } | null;
          }> | null;
        }
      | {
          _id: string;
          _type: "video";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          video: string | null;
          hasBorder: boolean | null;
          borderColor: string | null;
        }
    > | null;
    SEO: {
      _type: "seo";
      metaTitle?: string;
      metaDescription?: string;
      openGraphTitle?: string;
      openGraphDescription?: string;
      openGraphImage: string | null;
      includeInSitemap?: boolean;
      disallowRobots?: boolean;
      initSeo?: boolean;
    } | null;
  } | null;
};

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "{\n    _id,\n    _type,\n    'bgColor': bgColor.hex,\n    photos[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n}\n}": PhotoGalleryDataResult;
    "{\n    'partners': *[_type == 'partners'][0] {\n    _id,\n    _type,\n    title,\n    header,\n    'bgColor': bgColor.hex,    \n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    studios[] -> {\n    _id,\n    header {\n        studioTitle,\n        studioSubTitle,\n    },\n    studioAddress,\n    location,\n    slug,\n    studioDescription[] {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    'bgColor': bgColor.hex,    \n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    danceClasses[] {\n    _id,\n    _type,\n    classType {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    instructor {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    mode,\n    dayOfWeek,\n    startTime,\n},\n    partnerSite {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    partnerLink {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    }\n},\n    link {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    }\n},\n    \n}": PartnersQueryResult;
    "{\n    'teachers': *[_type == 'teachers'][0] {\n    _id,\n    _type,\n    title,\n    header,\n    'bgColor': bgColor.hex,    \n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \"teachers\": teachers[] | order(name asc) {\n    ...,\n    name,\n    slug,\n    pronouns,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    blurb,\n    studio {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n    \n},\n},\n}": TeachersQueryResult;
    "\n    *[_type == 'siteSettings'][0] {\n        SEO {\n    ...,\n    'openGraphImage': openGraphImage.asset->url,\n},\n    }\n": SiteSettingsQueryResult;
    "{\n    'header': *[_type == 'header'][0] {\n        navList[] {\n            ...,\n            \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n        },\n        mobileNavList[] {\n            ...,\n            \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n        }\n    }\n}": HeaderQueryResult;
    '{\n    \'footer\': *[_type == \'footer\'][0] {\n        linkLists[] {\n            links [] {\n                ...,\n                \n  _type == "link" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n            },\n        },   \n        newsletterContent[] {\n            ...,\n            \n  _type == "link" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n        },\n        footerContent[] {\n            ...,\n            \n  _type == "link" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n        },\n    }\n}': FooterQueryResult;
    "{\n    'homepage': *[_type == 'homepage'][0] {\n        ...,\n        content[]->{\n    ...,\n    _type == 'centeredText' => {\n    _id,\n    _type,\n    marginY,\n    'bgColor': bgColor.hex,\n    'textColor': textColor.hex,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    content[] {\n      ...,\n      \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n},\n    _type == 'classesSlideshow' => {\n    _id,\n    classes[] {\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    'bgColor': bgColor.hex,\n    'video': video.asset->url,\n    },\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n},\n    _type == 'imageText' => {\n    _id,\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    'bgColor': bgColor.hex,\n    content[] {\n      ...,\n      \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n},\n    _type == 'hero' => {\n    _id,\n    title,\n    header,\n    content,\n    featuredImages[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    secondaryImages[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n},\n    _type == 'partners' => {\n    _id,\n    _type,\n    title,\n    header,\n    'bgColor': bgColor.hex,    \n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    studios[] -> {\n    _id,\n    header {\n        studioTitle,\n        studioSubTitle,\n    },\n    studioAddress,\n    location,\n    slug,\n    studioDescription[] {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    'bgColor': bgColor.hex,    \n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    danceClasses[] {\n    _id,\n    _type,\n    classType {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    instructor {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    mode,\n    dayOfWeek,\n    startTime,\n},\n    partnerSite {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    partnerLink {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    }\n},\n    link {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    }\n},\n    _type == 'photoGallery' => {\n    _id,\n    _type,\n    'bgColor': bgColor.hex,\n    photos[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n}\n},\n    _type == 'splitImageAndText' => {\n    _id,\n    layout,\n    'bgColor': bgColor.hex,    \n    'textColor': textColor.hex,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    header,\n    content[] {\n      ...,\n      \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n},\n    _type == 'teachers' => {\n    _id,\n    _type,\n    title,\n    header,\n    'bgColor': bgColor.hex,    \n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \"teachers\": teachers[] | order(name asc) {\n    ...,\n    name,\n    slug,\n    pronouns,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    blurb,\n    studio {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n    \n},\n},\n    _type == 'video' => {\n    _id,\n    'video': video.asset->url,\n    hasBorder,\n    'borderColor': borderColor.hex,\n},\n},\n        SEO {\n    ...,\n    'openGraphImage': openGraphImage.asset->url,\n},\n    }\n}": HomepageQueryResult;
    "{\n    'page': *[_type == 'page' && $slug == slug.current][0] {\n        ...,\n        title,\n        content[]->{\n    ...,\n    _type == 'centeredText' => {\n    _id,\n    _type,\n    marginY,\n    'bgColor': bgColor.hex,\n    'textColor': textColor.hex,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    content[] {\n      ...,\n      \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n},\n    _type == 'classesSlideshow' => {\n    _id,\n    classes[] {\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    'bgColor': bgColor.hex,\n    'video': video.asset->url,\n    },\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n\n},\n    _type == 'imageText' => {\n    _id,\n    ...,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    'bgColor': bgColor.hex,\n    content[] {\n      ...,\n      \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n},\n    _type == 'hero' => {\n    _id,\n    title,\n    header,\n    content,\n    featuredImages[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    secondaryImages[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n},\n    _type == 'partners' => {\n    _id,\n    _type,\n    title,\n    header,\n    'bgColor': bgColor.hex,    \n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    studios[] -> {\n    _id,\n    header {\n        studioTitle,\n        studioSubTitle,\n    },\n    studioAddress,\n    location,\n    slug,\n    studioDescription[] {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    'bgColor': bgColor.hex,    \n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    danceClasses[] {\n    _id,\n    _type,\n    classType {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    instructor {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    mode,\n    dayOfWeek,\n    startTime,\n},\n    partnerSite {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    partnerLink {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    }\n},\n    link {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    }\n},\n    _type == 'photoGallery' => {\n    _id,\n    _type,\n    'bgColor': bgColor.hex,\n    photos[] {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n}\n},\n    _type == 'splitImageAndText' => {\n    _id,\n    layout,\n    'bgColor': bgColor.hex,    \n    'textColor': textColor.hex,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    header,\n    content[] {\n      ...,\n      \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n},\n    _type == 'teachers' => {\n    _id,\n    _type,\n    title,\n    header,\n    'bgColor': bgColor.hex,    \n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    \"teachers\": teachers[] | order(name asc) {\n    ...,\n    name,\n    slug,\n    pronouns,\n    image {\n    caption,\n    'assetId': asset->_id,\n    'assetPath': asset->path,\n    'aspectRatio': asset->metadata.dimensions.aspectRatio,\n},\n    blurb,\n    studio {\n        ...,\n        \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n,\n    },\n    \n  _type == \"link\" => {\n    ...,\n    internalLink->{_type,slug,title}\n  }\n    \n},\n},\n    _type == 'video' => {\n    _id,\n    'video': video.asset->url,\n    hasBorder,\n    'borderColor': borderColor.hex,\n},\n},\n        SEO {\n    ...,\n    'openGraphImage': openGraphImage.asset->url,\n},\n    }\n}": PageQueryResult;
  }
}
